-- MoonSec V3 Full Reconstruction
-- ==================================================
-- This is a reconstructed version of the protected code
-- Original obfuscation: MoonSec V3 with bytecode VM
-- ==================================================

-- Statistics:
--   Decoded characters: 111
--   String table entries: 1
--   Bytecode instructions: 412
--   Functions found: 0

-- --------------------------------------------------
-- STRING TABLE
-- --------------------------------------------------
-- [000] "0tonumberpnlZyMxY=3=)3e"charye_JHMtC=3=)3e!subzwzLodFO=3=)3e"byteJRghwJXF3EOQQE[..."
--       Length: 111 characters

-- --------------------------------------------------
-- BYTECODE DISASSEMBLY
-- --------------------------------------------------
-- [0000] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 r={}...
-- [0001] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 end else e=(e+0xbd)%0x64fb...
-- [0002] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 end elseif e%2~=0 then e=(...
-- [0003] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 d=(not d)and _ENV or d...
-- [0004] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 t=481161111101171099810111...
-- [0005] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 h=tonumber...
-- [0006] SETTABLE        0, 0, 0         ; Set table: a[e] = 0x1 s=function(a)local e=0x01 ...
-- [0007] SETTABLE        0, 0, 0         ; Set table: a[e] = k[e+1]...
-- [0008] SETTABLE        0, 0, 0         ; Set table: a[r+1] = h...
-- [0009] SETTABLE        0, 0, 0         ; Set table: a[r] = h[e[t]]...
-- [0010] SETTABLE        0, 0, 0         ; Set table: a[r] = a[r](p(a,r+1,e[s]))n=n+1...
-- [0011] SETTABLE        0, 0, 0         ; Set table: a[r] = f...
-- [0012] SETTABLE        0, 0, 0         ; Set table: a[e] = b[u]...
-- [0013] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,h))break...
-- [0014] SETTABLE        0, 0, 0         ; Set table: a[e] = b[u]...
-- [0015] SETTABLE        0, 0, 0         ; Set table: a[e] = b[r]...
-- [0016] SETTABLE        0, 0, 0         ; Set table: a[e] = b[r]...
-- [0017] SETTABLE        0, 0, 0         ; Set table: a[f+1] = m...
-- [0018] SETTABLE        0, 0, 0         ; Set table: a[f] = m[e[t]]...
-- [0019] SETTABLE        0, 0, 0         ; Set table: a[n] = a[n](p(a,n+1,e[s]))break...
-- [0020] SETTABLE        0, 0, 0         ; Set table: a[e] = k[u]...
-- [0021] SETTABLE        0, 0, 0         ; Set table: a[e] = k[u]...
-- [0022] SETTABLE        0, 0, 0         ; Set table: a[f+1] = m...
-- [0023] SETTABLE        0, 0, 0         ; Set table: a[f] = m[e[t]]...
-- [0024] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0025] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0026] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0027] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0028] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,h))n=n+1...
-- [0029] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0030] SETTABLE        0, 0, 0         ; Set table: a[e] = a[e](p(a,e+1,h))until true...
-- [0031] SETTABLE        0, 0, 0         ; Set table: a[n] = a[n](p(a,n+1,e[s]))break...
-- [0032] SETTABLE        0, 0, 0         ; Set table: a[n] = a[n](p(a,n+1,e[s]))end else if...
-- [0033] SETTABLE        0, 0, 0         ; Set table: a[o] = a[o](a[o+1])n=n+1...
-- [0034] SETTABLE        0, 0, 0         ; Set table: a[o] = a[o](a[o+1])n=n+1...
-- [0035] SETTABLE        0, 0, 0         ; Set table: a[e] = a[e](a[e+1])else if f52 then l...
-- [0036] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0037] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0038] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0039] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0040] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0041] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0042] SETTABLE        0, 0, 0         ; Set table: a[e] = a[e](a[e+1])break...
-- [0043] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0044] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0045] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0046] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0047] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0048] SETTABLE        0, 0, 0         ; Set table: a[e] = a[e](a[e+1])end end end else i...
-- [0049] SETTABLE        0, 0, 0         ; Set table: a[e] = d[n]...
-- [0050] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](a[f+1])n=n+1...
-- [0051] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](a[f+1])n=n+1...
-- [0052] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](a[f+1])n=n+1...
-- [0053] SETTABLE        0, 0, 0         ; Set table: a[n+1] = d...
-- [0054] SETTABLE        0, 0, 0         ; Set table: a[n] = d[e[t]]...
-- [0055] SETTABLE        0, 0, 0         ; Set table: a[r] = a[r](a[r+1])n=n+1...
-- [0056] SETTABLE        0, 0, 0         ; Set table: a[r] = a[r](a[r+1])n=n+1...
-- [0057] SETTABLE        0, 0, 0         ; Set table: a[r] = a[r](a[r+1])n=n+1...
-- [0058] SETTABLE        0, 0, 0         ; Set table: a[n] = d[e]...
-- [0059] SETTABLE        0, 0, 0         ; Set table: a[p+1] = r...
-- [0060] SETTABLE        0, 0, 0         ; Set table: a[p] = r[e[t]]...
-- [0061] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](a[f+1])end end else if 5=...
-- [0062] SETTABLE        0, 0, 0         ; Set table: a[d+1] = n...
-- [0063] SETTABLE        0, 0, 0         ; Set table: a[d] = n[e[t]]...
-- [0064] SETTABLE        0, 0, 0         ; Set table: a[n] = d[e]...
-- [0065] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](a[f+1])n=n+1...
-- [0066] SETTABLE        0, 0, 0         ; Set table: a[r] = a[r](p(a,r+1,e[s]))n=n+1...
-- [0067] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0068] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0069] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0070] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0071] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0072] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0073] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0074] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0075] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0076] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0077] SETTABLE        0, 0, 0         ; Set table: a[n] = d[e]...
-- [0078] SETTABLE        0, 0, 0         ; Set table: a[n] = d[e]...
-- [0079] SETTABLE        0, 0, 0         ; Set table: a[o] = r...
-- [0080] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0081] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0082] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0083] SETTABLE        0, 0, 0         ; Set table: a[f+1] = r...
-- [0084] SETTABLE        0, 0, 0         ; Set table: a[f] = r[e[t]]...
-- [0085] SETTABLE        0, 0, 0         ; Set table: a[f] = a[f](p(a,f+1,e[s]))n=n+1...
-- [0086] CALL            0, 0, 0         ; Call function: gsub()
-- [0087] CALL            0, 0, 0         ; Call function: getfenv()
-- [0088] CALL            0, 0, 0         ; Call function: n()
-- [0089] CALL            0, 0, 0         ; Call function: asub()
-- [0090] CALL            0, 0, 0         ; Call function: byte()
-- [0091] CALL            0, 0, 0         ; Call function: pnlZyMxY()
-- [0092] CALL            0, 0, 0         ; Call function: f()
-- [0093] CALL            0, 0, 0         ; Call function: s()
-- [0094] CALL            0, 0, 0         ; Call function: ye_JHMtC()
-- [0095] CALL            0, 0, 0         ; Call function: o()
-- [0096] CALL            0, 0, 0         ; Call function: zwzLodFO()
-- [0097] CALL            0, 0, 0         ; Call function: Y_SjWxXJ()
-- [0098] CALL            0, 0, 0         ; Call function: utLzvgBV()
-- [0099] CALL            0, 0, 0         ; Call function: d()
-- ... and 312 more instructions

-- --------------------------------------------------
-- RECONSTRUCTED CODE
-- --------------------------------------------------

-- String constants
local STRINGS = {
  [0] = "0tonumberpnlZyMxY=3=)3e\"charye_JHMtC=3=)3e!subzwzLodFO=3=)3e\"byteJRghwJXF3EOQQE[omcG=GC=vgBV3EOQQ=...",
}

-- Main execution function
local function main(...)
  local env = getfenv()
  local args = {...}
  
  -- Initialize VM state
  local stack = {}
  local registers = {}
  local pc = 0  -- Program counter
  
  -- Bytecode interpreter loop
  -- Note: The original code uses a custom VM to execute protected bytecode
  -- Full reconstruction requires runtime tracing of the VM execution
  
  -- Example: Access decoded strings
  local str = STRINGS[0]
  
  -- Protected code execution happens here
  -- The actual logic is hidden in the bytecode VM
  
  return env
end

-- Execute main function
return main(...)
